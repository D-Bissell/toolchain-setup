---

# Install epel repo
- name: Install EPEL repository
  yum:
    name: epel-release
    state: latest

- name: Remove docker if installed from CentOS repo
  yum:
    name:
      - docker
      - docker-client
      - docker-client-latest
      - docker-common
      - docker-latest
      - docker-latest-logrotate
      - docker-logrotate
      - docker-engine
    state: removed

- name: Set up the Docker CE repository
  yum_repository:
    name: docker-ce-stable
    description: Docker CE Stable - $basearch
    baseurl: https://download.docker.com/linux/centos/7/$basearch/stable
    enabled: yes
    gpgcheck: yes
    gpgkey: https://download.docker.com/linux/centos/gpg
  become: yes

- name: Install docker pre-requisites
  yum:
    name: 
      - yum-utils
      - device-mapper-persistent-data # this gets installed by the below task anyway.
#      - lvm2
    state: latest

- name: Install Docker CE
  yum:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
  become: yes

# Install git, ansible
- name: Install git & ansible
  yum:
    name:
      - git
      - ansible
    state: latest

- name: Ensure docker deamon is running
  service:
    name: docker
    state: started
    enabled: true
  become: true
  tags:
  - docker

# Install pip with easy_install
- name: Install pip
  easy_install:
    name: pip
    state: latest

# Install pip packages:
- name: Install pip managed packages
  pip:
    name: "{{ item }}"
    state: latest
  loop:
    - docker
  tags:
  - docker

# Add Media mount to FStab
- name: Mount NAS Media folder to /mnt/Media
  mount:
    state: mounted
    path: /mnt/Media 
    src: nas:/volume1/Media
    fstype: nfs

# Create users & groups
- name: Create users
  user:
    name: "{{ item }}"
    state: present
    comment: "{{ item }} user"
    groups: "docker"
    append: yes
  loop:
    - sabnzbd
    - sonarr
    - radarr
  tags:
    - sabnzbd
    - sonarr
    - radarr


# Pull docker images for sabnzbd, sonarr, radarr
- name: Pull docker images for sabnzbd, sonarr, radarr
  docker_image:
    name: "{{ item }}"
    source: pull
  loop:
    - linuxserver/sabnzbd
    - linuxserver/sonarr
    - linuxserver/radarr
  tags:
  - docker
  - sabnzbd
  - sonarr
  - radarr


# Create sabnzbd container
- name: Create and run sabnzbd container
  docker_container:
    name: sabnzbd
    image: linuxserver/sabnzbd
    state: started
    published_ports: 
    - 8080:8080
    - 9090:9090
    restart_policy: always
#    pull: true     # Might be able to remove the docker_image task above if I set this?
    volumes:
    - /opt/sabnzbd/config:/config
    - /mnt/Media/Downloads/incomplete:/incomplete-downloads
    - /mnt/Media/Downloads:/downloads
    env:
      TZ: Australia/Sydney
      PUID: "1001"
      PGID: "1001"
    userns_mode: host
  tags:
    - docker
    - sabnzbd

# Create sonarr container
- name: Create and run sonarr container
  docker_container:
    name: sonarr
    image: linuxserver/sonarr
    state: started
    published_ports: 
    - 8989:8989
    restart_policy: always
#    pull: true     # Might be able to remove the docker_image task above if I set this?
    volumes:
    - /opt/sonarr/config:/config
    - /mnt/Media/Downloads:/downloads # Sabnzbd completed download folder
    - /mnt/Media/TV Series:/tv
    env:
      TZ: Australia/Sydney
      PUID: "1002"
      PGID: "1002"
  tags:
    - docker
    - sonarr

# Create sonarr container
- name: Create and run radarr container
  docker_container:
    name: radarr
    image: linuxserver/radarr
    state: started
    published_ports: 
    - 7878:7878
    restart_policy: always
#    pull: true     # Might be able to remove the docker_image task above if I set this?
    volumes:
    - /opt/radarr/config:/config
    - /mnt/Media/Downloads:/downloads # Sabnzbd completed download folder
    - /mnt/Media/Movies:/movies
    env:
      TZ: Australia/Sydney
      PUID: "1003"
      PGID: "1003"
  tags:
    - docker
    - radarr